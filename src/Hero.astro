---
import { Image } from "astro-image";
import { Translate } from "astro-localization";

interface Props {
	id?: string; // Id for the <section> element
	className?: string; // Classes to add to <section> element
	container?: boolean; // Add container class
	title: string;
	subtitle?: string;
	buttonText?: string;
	buttonLink?: string;
	image?: string;
	lmap?: Object;
}

const { title, subtitle, buttonText, buttonLink, image, id = false, class: className = "", container = true, lmap = {} } = Astro.props as Props;
---

<section {id} class={`hero ${className}`.trim()}>
	<div class={`${container ? "container" : ""} hero-container`.trim()}>
		<div class="hero-text">
			<h1 class="hero-title">
				<Translate {lmap} key={title} />
			</h1>
			<p class="hero-caption">
				<Translate {lmap} key={subtitle} />
			</p>
			<button href={buttonLink} class="hero-action">{buttonText}</button>
		</div>

		{image && (
			<div class="hero-image-wrapper">
				<Image class="hero-image" src={image} />
			</div>
		)}
	</div>
	<span class="scrolldown"></span>
</section>

<style lang="scss">
	/* Hero section */
	section.hero {
		padding: var(--spacer-xl) 0;
		position: relative;
		height: 100vh;

		.container {
			margin-top: 0;
		}
	}

	@media screen and (min-width: 80em) {
		.hero .container {
			margin-top: calc(var(--header-height) - 1rem);
		}
	}

	@media screen and (min-width: 40em) {
		.hero {
			background-color: transparent;
		}
	}

	/* Hero container */
	.hero-container {
		display: grid;
		height: 100%;
		justify-content: center;
	}

	@media screen and (min-width: 40em) {
		.hero-container {
			grid-template-columns: repeat(2, 1fr);
			align-items: center;
			justify-items: stretch;
			align-content: center;
		}
	}

	.hero-text {
		width: min(40rem, 100%);
	}

	.hero-title {
		font-size: clamp(2rem, 6vw + 0.5rem, 4rem);
		margin-bottom: 2rem;
		font-weight: 800;
	}

	.hero-caption {
		margin-bottom: 3rem;
	}

	@media screen and (min-width: 40em) {
		.hero-image-wrapper {
			display: block;
		}
		.hero-image-wrapper .hero-image {
			display: block;
		}
	}

	@media screen and (min-width: 100em) {
		.hero-image-wrapper .hero-image {
			transform: scale(1.2) translateX(2rem);
		}
	}

	.hero-image {
		width: 100%;
	}
</style>
