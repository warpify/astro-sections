---
import { Translate } from "astro-localization";

interface Props {
	title: string;
	subtitle: string;
	description: string;
	className: string; // Class will apply to section tag
	alt: boolean; // apply class for alternate background
	id?: string; // id for the section tag
	container?: boolean; // apply class container
	inverted?: boolean; // invert the order of the sections
	verticalAlignment?: string; // center | start | end
	lmap?: Object;
}

const {
	title,
	subtitle,
	description,
	id = false,
	class: className = "",
	alt = false,
	container = true,
	inverted = false,
	verticalAlignment = "start",
	lmap = {}
} = Astro.props as Props;

let verticalAlignmentClass = "v-start";
switch (verticalAlignment) {
	case "center" || "middle":
		verticalAlignmentClass = "v-center";
		break;
	case "start" || "top":
		verticalAlignmentClass = "v-start";
		break;
	case "end" || "flex-end" || "bottom":
		verticalAlignmentClass = "v-end";
		break;
	default:
		verticalAlignmentClass = "v-start";
}
---

<section {id} class={`half-section ${className} ${alt ? "alt" : ""}`}>
	<div class={`${container ? "container" : ""}`}>
		<div class={`caption ${verticalAlignmentClass} ${inverted ? "inverted" : ""}`}>
			<slot name="header" />
			<div>
				{title && (
					<h2>
						<Translate key={title} {lmap} />
					</h2>
				)}
				{subtitle && (
					<h3>
						<Translate key={subtitle} {lmap} />
					</h3>
				)}
				{description && (
					<p>
						<Translate key={description} {lmap} />
					</p>
				)}
			</div>
			<slot name="footer" />
		</div>
		<div class="content">
			<slot />
		</div>
	</div>
</section>

<style lang="scss">
	section > .container {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(min(30rem, 100%), 1fr));
		gap: 2rem;

		> .caption {
			display: flex;
			flex-direction: column;

			&.inverted {
				order: 1;
			}
			&.v-start {
				justify-content: start;
			}
			&.v-center {
				justify-content: center;
			}
			&.v-end {
				justify-content: end;
			}
		}
	}
</style>
